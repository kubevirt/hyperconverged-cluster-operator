name: Build and Push Images

on:
  push:
    branches:
      - master
      - release-*
jobs:
  build_push:
    if: (github.repository == 'kubevirt/hyperconverged-cluster-operator')
    name: Build and Push Images
    runs-on: ubuntu-latest
    env:
      QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}
      QUAY_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
      REGISTRY_NAMESPACE: kubevirt
    steps:
      - name: Checkout the latest code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - name: Get latest version
        run: |
          PACKAGE_DIR="./deploy/olm-catalog/community-kubevirt-hyperconverged"
          CSV_VERSION=$(ls -d ${PACKAGE_DIR}/*/ | sort -rV | awk "NR==$((RELEASE_DELTA+1))" | cut -d '/' -f 5)
          echo "CSV_VERSION=${CSV_VERSION}" >> $GITHUB_ENV
      - name: set tag for master
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          echo "IMAGE_TAG=${CSV_VERSION}-unstable" >> $GITHUB_ENV
          echo "UNSTABLE=UNSTABLE" >> $GITHUB_ENV

      - name: set tag for releases
        if: ${{ github.ref != 'refs/heads/master' }}
        run: echo "IMAGE_TAG=${CSV_VERSION}" >> $GITHUB_ENV
      - name: Build Applications Images
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |
          IMAGE_TAG=${IMAGE_TAG} make container-build
      - name: Push Application Images
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |
          IMAGE_TAG=${IMAGE_TAG} make container-push
      - name: Build Digester
        run: |
          (cd tools/digester && go build .)
      - name: Build Manifests with unique CSV semver
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |
          export HCO_OPERATOR_IMAGE=$(tools/digester/digester --image="quay.io/kubevirt/hyperconverged-cluster-operator:${IMAGE_TAG}")
          export HCO_WEBHOOK_IMAGE=$(tools/digester/digester --image="quay.io/kubevirt/hyperconverged-cluster-webhook:${IMAGE_TAG}")
          ./hack/build-manifests.sh UNIQUE
      - name: Get opm client
        run: |
          wget https://github.com/operator-framework/operator-registry/releases/download/v1.15.1/linux-amd64-opm
          chmod +x linux-amd64-opm
      - name: Build and Push the Index Image
        run: |
          export OPM=$(pwd)/linux-amd64-opm
          ./hack/build-index-image.sh ${{ env.IMAGE_TAG }} ${{ env.UNSTABLE }}
