package v1alpha1

// This file contains a collection of methods that can be used from go-restful to
// generate Swagger API documentation for its models. Please read this PR for more
// information on the implementation: https://github.com/emicklei/go-restful/pull/215
//
// TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
// they are on one line! For multiple line or blocks that you want to ignore use ---.
// Any context after a --- is ignored.
//
// Those methods can be generated by using hack/update-swagger-docs.sh

// AUTO-GENERATED FUNCTIONS START HERE
var map_ConsolePlugin = map[string]string{
	"": "ConsolePlugin is an extension for customizing OpenShift web console by dynamically loading code from another service running on the cluster.\n\nCompatibility level 4: No compatibility is provided, the API can change at any point for any reason. These capabilities should not be used by applications needing long term support.",
}

func (ConsolePlugin) SwaggerDoc() map[string]string {
	return map_ConsolePlugin
}

var map_ConsolePluginList = map[string]string{
	"": "Compatibility level 4: No compatibility is provided, the API can change at any point for any reason. These capabilities should not be used by applications needing long term support.",
}

func (ConsolePluginList) SwaggerDoc() map[string]string {
	return map_ConsolePluginList
}

var map_ConsolePluginService = map[string]string{
	"":          "ConsolePluginService holds information on service that is serving console dynamic plugin assets.",
	"name":      "name of Service that is serving the plugin.",
	"namespace": "namespace of Service that is serving the plugin.",
	"port":      "port on which the Service that is serving the plugin is listening to.",
	"basePath":  "basePath is the path to the plugin's assets. The primary asset it the manifest file called `plugin-manifest.json`, which is a JSON document that contains metadata about the plugin and the extensions.",
}

func (ConsolePluginService) SwaggerDoc() map[string]string {
	return map_ConsolePluginService
}

var map_ConsolePluginSpec = map[string]string{
	"":            "ConsolePluginSpec is the desired plugin configuration.",
	"displayName": "displayName is the display name of the plugin.",
	"service":     "service is a Kubernetes Service that exposes the plugin using a deployment with an HTTP server. The Service must use HTTPS and service serving certificate. The console backend will proxy the plugins assets from the Service using the service CA bundle.",
}

func (ConsolePluginSpec) SwaggerDoc() map[string]string {
	return map_ConsolePluginSpec
}

// AUTO-GENERATED FUNCTIONS END HERE
