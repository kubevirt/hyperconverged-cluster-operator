// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/cloud/oslogin/common/common.proto

package common

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The operating system options for account entries.
type OperatingSystemType int32

const (
	// The operating system type associated with the user account information is
	// unspecified.
	OperatingSystemType_OPERATING_SYSTEM_TYPE_UNSPECIFIED OperatingSystemType = 0
	// Linux user account information.
	OperatingSystemType_LINUX OperatingSystemType = 1
	// Windows user account information.
	OperatingSystemType_WINDOWS OperatingSystemType = 2
)

var OperatingSystemType_name = map[int32]string{
	0: "OPERATING_SYSTEM_TYPE_UNSPECIFIED",
	1: "LINUX",
	2: "WINDOWS",
}

var OperatingSystemType_value = map[string]int32{
	"OPERATING_SYSTEM_TYPE_UNSPECIFIED": 0,
	"LINUX":                             1,
	"WINDOWS":                           2,
}

func (x OperatingSystemType) String() string {
	return proto.EnumName(OperatingSystemType_name, int32(x))
}

func (OperatingSystemType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7fa58776520b3f24, []int{0}
}

// The POSIX account information associated with a Google account.
type PosixAccount struct {
	// Only one POSIX account can be marked as primary.
	Primary bool `protobuf:"varint,1,opt,name=primary,proto3" json:"primary,omitempty"`
	// The username of the POSIX account.
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	// The user ID.
	Uid int64 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	// The default group ID.
	Gid int64 `protobuf:"varint,4,opt,name=gid,proto3" json:"gid,omitempty"`
	// The path to the home directory for this account.
	HomeDirectory string `protobuf:"bytes,5,opt,name=home_directory,json=homeDirectory,proto3" json:"home_directory,omitempty"`
	// The path to the logic shell for this account.
	Shell string `protobuf:"bytes,6,opt,name=shell,proto3" json:"shell,omitempty"`
	// The GECOS (user information) entry for this account.
	Gecos string `protobuf:"bytes,7,opt,name=gecos,proto3" json:"gecos,omitempty"`
	// System identifier for which account the username or uid applies to.
	// By default, the empty value is used.
	SystemId string `protobuf:"bytes,8,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	// Output only. A POSIX account identifier.
	AccountId string `protobuf:"bytes,9,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// The operating system type where this account applies.
	OperatingSystemType OperatingSystemType `protobuf:"varint,10,opt,name=operating_system_type,json=operatingSystemType,proto3,enum=google.cloud.oslogin.common.OperatingSystemType" json:"operating_system_type,omitempty"`
	// Output only. The canonical resource name.
	Name                 string   `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PosixAccount) Reset()         { *m = PosixAccount{} }
func (m *PosixAccount) String() string { return proto.CompactTextString(m) }
func (*PosixAccount) ProtoMessage()    {}
func (*PosixAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_7fa58776520b3f24, []int{0}
}

func (m *PosixAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PosixAccount.Unmarshal(m, b)
}
func (m *PosixAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PosixAccount.Marshal(b, m, deterministic)
}
func (m *PosixAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PosixAccount.Merge(m, src)
}
func (m *PosixAccount) XXX_Size() int {
	return xxx_messageInfo_PosixAccount.Size(m)
}
func (m *PosixAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_PosixAccount.DiscardUnknown(m)
}

var xxx_messageInfo_PosixAccount proto.InternalMessageInfo

func (m *PosixAccount) GetPrimary() bool {
	if m != nil {
		return m.Primary
	}
	return false
}

func (m *PosixAccount) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *PosixAccount) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *PosixAccount) GetGid() int64 {
	if m != nil {
		return m.Gid
	}
	return 0
}

func (m *PosixAccount) GetHomeDirectory() string {
	if m != nil {
		return m.HomeDirectory
	}
	return ""
}

func (m *PosixAccount) GetShell() string {
	if m != nil {
		return m.Shell
	}
	return ""
}

func (m *PosixAccount) GetGecos() string {
	if m != nil {
		return m.Gecos
	}
	return ""
}

func (m *PosixAccount) GetSystemId() string {
	if m != nil {
		return m.SystemId
	}
	return ""
}

func (m *PosixAccount) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *PosixAccount) GetOperatingSystemType() OperatingSystemType {
	if m != nil {
		return m.OperatingSystemType
	}
	return OperatingSystemType_OPERATING_SYSTEM_TYPE_UNSPECIFIED
}

func (m *PosixAccount) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The SSH public key information associated with a Google account.
type SshPublicKey struct {
	// Public key text in SSH format, defined by
	// <a href="https://www.ietf.org/rfc/rfc4253.txt" target="_blank">RFC4253</a>
	// section 6.6.
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// An expiration time in microseconds since epoch.
	ExpirationTimeUsec int64 `protobuf:"varint,2,opt,name=expiration_time_usec,json=expirationTimeUsec,proto3" json:"expiration_time_usec,omitempty"`
	// Output only. The SHA-256 fingerprint of the SSH public key.
	Fingerprint string `protobuf:"bytes,3,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	// Output only. The canonical resource name.
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SshPublicKey) Reset()         { *m = SshPublicKey{} }
func (m *SshPublicKey) String() string { return proto.CompactTextString(m) }
func (*SshPublicKey) ProtoMessage()    {}
func (*SshPublicKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_7fa58776520b3f24, []int{1}
}

func (m *SshPublicKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SshPublicKey.Unmarshal(m, b)
}
func (m *SshPublicKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SshPublicKey.Marshal(b, m, deterministic)
}
func (m *SshPublicKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SshPublicKey.Merge(m, src)
}
func (m *SshPublicKey) XXX_Size() int {
	return xxx_messageInfo_SshPublicKey.Size(m)
}
func (m *SshPublicKey) XXX_DiscardUnknown() {
	xxx_messageInfo_SshPublicKey.DiscardUnknown(m)
}

var xxx_messageInfo_SshPublicKey proto.InternalMessageInfo

func (m *SshPublicKey) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SshPublicKey) GetExpirationTimeUsec() int64 {
	if m != nil {
		return m.ExpirationTimeUsec
	}
	return 0
}

func (m *SshPublicKey) GetFingerprint() string {
	if m != nil {
		return m.Fingerprint
	}
	return ""
}

func (m *SshPublicKey) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterEnum("google.cloud.oslogin.common.OperatingSystemType", OperatingSystemType_name, OperatingSystemType_value)
	proto.RegisterType((*PosixAccount)(nil), "google.cloud.oslogin.common.PosixAccount")
	proto.RegisterType((*SshPublicKey)(nil), "google.cloud.oslogin.common.SshPublicKey")
}

func init() {
	proto.RegisterFile("google/cloud/oslogin/common/common.proto", fileDescriptor_7fa58776520b3f24)
}

var fileDescriptor_7fa58776520b3f24 = []byte{
	// 628 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0xcd, 0x4e, 0xdb, 0x4c,
	0x14, 0xfd, 0x8c, 0xf9, 0xcb, 0x90, 0x0f, 0x45, 0x03, 0x55, 0x5d, 0xb2, 0x20, 0xa5, 0x42, 0x8a,
	0x5a, 0xc9, 0x46, 0xed, 0xae, 0x5d, 0x19, 0x08, 0xc8, 0x2a, 0x4d, 0x22, 0x27, 0x11, 0xa5, 0x42,
	0xb2, 0x8c, 0x7d, 0x99, 0x4c, 0x6b, 0x7b, 0xac, 0x19, 0xbb, 0x22, 0x42, 0xbc, 0x50, 0x1f, 0xa4,
	0x8b, 0x3e, 0x43, 0x17, 0x5d, 0x75, 0xc1, 0x53, 0x54, 0x33, 0xe3, 0x40, 0x68, 0x81, 0xd5, 0xcc,
	0x3d, 0xe7, 0xfe, 0x9c, 0x7b, 0xaf, 0xc7, 0xa8, 0x4d, 0x18, 0x23, 0x09, 0x38, 0x51, 0xc2, 0xca,
	0xd8, 0x61, 0x22, 0x61, 0x84, 0x66, 0x4e, 0xc4, 0xd2, 0x94, 0x4d, 0x0f, 0x3b, 0xe7, 0xac, 0x60,
	0xb8, 0xa9, 0x3d, 0x6d, 0xe5, 0x69, 0x57, 0x9e, 0xb6, 0x76, 0xd9, 0xd8, 0xac, 0xd2, 0x84, 0x39,
	0x75, 0xce, 0x29, 0x24, 0x71, 0x70, 0x06, 0xe3, 0xf0, 0x2b, 0x65, 0x5c, 0x47, 0x6f, 0x3c, 0x9b,
	0x71, 0xe0, 0x20, 0x58, 0xc9, 0x23, 0xd0, 0xd4, 0xd6, 0x77, 0x13, 0xd5, 0xfb, 0x4c, 0xd0, 0x0b,
	0x37, 0x8a, 0x58, 0x99, 0x15, 0xd8, 0x42, 0x4b, 0x39, 0xa7, 0x69, 0xc8, 0x27, 0x96, 0xd1, 0x32,
	0xda, 0xcb, 0xfe, 0xd4, 0xc4, 0x1b, 0x68, 0xb9, 0x14, 0xc0, 0xb3, 0x30, 0x05, 0x6b, 0xae, 0x65,
	0xb4, 0x6b, 0xfe, 0x8d, 0x8d, 0x1b, 0xc8, 0x2c, 0x69, 0x6c, 0x99, 0x2d, 0xa3, 0x6d, 0xfa, 0xf2,
	0x2a, 0x11, 0x42, 0x63, 0x6b, 0x5e, 0x23, 0x84, 0xc6, 0x78, 0x1b, 0xad, 0x8e, 0x59, 0x0a, 0x41,
	0x4c, 0x39, 0x44, 0x05, 0xe3, 0x13, 0x6b, 0x41, 0x65, 0xf9, 0x5f, 0xa2, 0xfb, 0x53, 0x10, 0xaf,
	0xa3, 0x05, 0x31, 0x86, 0x24, 0xb1, 0x16, 0x15, 0xab, 0x0d, 0x89, 0x12, 0x88, 0x98, 0xb0, 0x96,
	0x34, 0xaa, 0x0c, 0xdc, 0x44, 0x35, 0x31, 0x11, 0x05, 0xa4, 0x01, 0x8d, 0xad, 0x65, 0xad, 0x49,
	0x03, 0x5e, 0x8c, 0xb7, 0x10, 0x0a, 0x75, 0x53, 0x92, 0xad, 0x49, 0x76, 0xd7, 0xfc, 0xe5, 0x9a,
	0x7e, 0xad, 0x82, 0xbd, 0x18, 0xc7, 0xe8, 0x09, 0xcb, 0x81, 0x87, 0x05, 0xcd, 0x48, 0x50, 0xa5,
	0x2a, 0x26, 0x39, 0x58, 0xa8, 0x65, 0xb4, 0x57, 0x5f, 0xef, 0xd8, 0x8f, 0xcc, 0xdd, 0xee, 0x4d,
	0x23, 0x07, 0x2a, 0x70, 0x38, 0xc9, 0xc1, 0x5f, 0x63, 0xff, 0x82, 0xf8, 0x29, 0x9a, 0x57, 0x53,
	0x5b, 0xb9, 0xd5, 0xa0, 0x80, 0xb7, 0xde, 0xb5, 0x7b, 0x80, 0x5e, 0x4c, 0xd3, 0xea, 0x5a, 0x61,
	0x4e, 0x85, 0xac, 0xe0, 0xdc, 0x59, 0xcb, 0xa6, 0x1c, 0xb5, 0x70, 0x2e, 0xe5, 0x71, 0xe5, 0xe4,
	0x9c, 0x7d, 0x86, 0xa8, 0x10, 0xce, 0x65, 0x75, 0xbb, 0xda, 0xfa, 0x6d, 0xa0, 0xfa, 0x40, 0x8c,
	0xfb, 0xe5, 0x59, 0x42, 0xa3, 0xf7, 0x30, 0x91, 0x0b, 0xf8, 0x02, 0x7a, 0x89, 0x35, 0x5f, 0x5e,
	0xf1, 0x0e, 0x5a, 0x87, 0x8b, 0x9c, 0x4a, 0x79, 0x2c, 0x0b, 0x0a, 0x9a, 0x42, 0x50, 0x0a, 0x88,
	0xd4, 0x32, 0x4d, 0x1f, 0xdf, 0x72, 0x43, 0x9a, 0xc2, 0x48, 0x40, 0x84, 0xb7, 0xd1, 0xca, 0x39,
	0xcd, 0x08, 0xf0, 0x9c, 0xd3, 0xac, 0x50, 0xeb, 0xad, 0xf4, 0xcf, 0xe2, 0x37, 0xfd, 0xcd, 0xff,
	0xdd, 0x9f, 0x7f, 0xed, 0xf6, 0x1e, 0xec, 0xef, 0x8e, 0xda, 0xf6, 0x9d, 0xfe, 0xc4, 0x0c, 0x25,
	0x9c, 0xcb, 0x99, 0x5a, 0x57, 0x2f, 0x87, 0x68, 0xed, 0x9e, 0xc1, 0xe3, 0x6d, 0xf4, 0xbc, 0xd7,
	0xef, 0xf8, 0xee, 0xd0, 0xeb, 0x1e, 0x06, 0x83, 0x93, 0xc1, 0xb0, 0xf3, 0x21, 0x18, 0x9e, 0xf4,
	0x3b, 0xc1, 0xa8, 0x3b, 0xe8, 0x77, 0xf6, 0xbc, 0x03, 0xaf, 0xb3, 0xdf, 0xf8, 0x0f, 0xd7, 0xd0,
	0xc2, 0x91, 0xd7, 0x1d, 0x7d, 0x6c, 0x18, 0x78, 0x05, 0x2d, 0x1d, 0x7b, 0xdd, 0xfd, 0xde, 0xf1,
	0xa0, 0x31, 0xb7, 0xfb, 0xd3, 0xb8, 0x76, 0x5f, 0xa1, 0xe6, 0x03, 0x52, 0x47, 0x02, 0x38, 0xae,
	0xcf, 0x4a, 0x44, 0x9b, 0x11, 0x4b, 0x1f, 0xfb, 0x3a, 0x76, 0xeb, 0x3d, 0x71, 0x24, 0xed, 0xbe,
	0x7c, 0x67, 0x9f, 0xdc, 0xca, 0x95, 0xb0, 0x24, 0xcc, 0x88, 0xcd, 0x38, 0x71, 0x08, 0x64, 0xea,
	0x0d, 0x3a, 0xb7, 0xc5, 0xee, 0xfd, 0x13, 0xbc, 0xd3, 0xc7, 0xb7, 0xb9, 0xe6, 0xa1, 0xce, 0xb1,
	0xa7, 0xca, 0x55, 0xe9, 0xed, 0x3d, 0xc5, 0xfe, 0x98, 0xb2, 0xa7, 0x8a, 0x3d, 0xad, 0xd8, 0x53,
	0xcd, 0x9e, 0x2d, 0xaa, 0x4a, 0x6f, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0x89, 0x84, 0x9e, 0x6c,
	0x72, 0x04, 0x00, 0x00,
}
