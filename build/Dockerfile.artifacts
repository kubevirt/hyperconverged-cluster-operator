FROM registry.access.redhat.com/ubi9/nginx-120

WORKDIR /opt/app-root/src

COPY hack/config /tmp/config

USER 0
RUN dnf -y install zip file && \
    sed '/^\s*listen\s*\[::\]:8080/d' /etc/nginx/nginx.conf > /etc/nginx/nginx.conf.ipv4 && \
    sed '/^\s*listen\s*8080/d' /etc/nginx/nginx.conf > /etc/nginx/nginx.conf.ipv6
USER 1001

ARG download_url=https://github.com/kubevirt/kubevirt/releases/download

RUN eval $(cat /tmp/config  |grep KUBEVIRT_VERSION=) && \
    echo "KUBEVIRT_VERSION: $KUBEVIRT_VERSION" && \
    for arch in amd64 arm64; do \
        for os in linux darwin windows; do \
            if [[ ${os} == "windows" && ${arch} == "arm64" ]]; then \
                printf "\n\n### Skipping virctl for Windows on ARM64\n"; \
            else \
                extension=""; \
                archive_extension=".zip"; \
                archive_command="zip -r -q"; \
                if [ "${os}" = "windows" ]; then \
                    extension=".exe"; \
                fi; \
                l_os="${os}"; \
                if [ "${os}" = "darwin" ]; then \
                    l_os="mac"; \
                fi; \
                if [ "${os}" = "linux" ]; then \
                    archive_extension=".tar.gz"; \
                    archive_command="tar -zhcf"; \
                fi; \
                url="${download_url}/${KUBEVIRT_VERSION}/virtctl-${KUBEVIRT_VERSION}-${os}-${arch}${extension}"; \
                printf "\n\n### Downloading ${url}\n"; \
                curl --fail -L -o virtctl${extension} "${url}" && \
                file virtctl${extension} && \
                mkdir -p ./${arch}/${l_os} && ${archive_command} ./${arch}/${l_os}/virtctl${archive_extension} virtctl${extension} && rm virtctl${extension}; \
            fi; \
        done; \
    done

ARG git_url=https://github.com/kubevirt/hyperconverged-cluster-operator.git
ARG git_sha=NONE

LABEL multi.GIT_URL=${git_url} \
      multi.GIT_SHA=${git_sha}

CMD if [[ -d "/proc/sys/net/ipv4" && -d "/proc/sys/net/ipv6" ]]; \
    then \
      nginx -g "daemon off;"; \
    elif [[ -d "/proc/sys/net/ipv4" ]]; \
    then \
      nginx -c /etc/nginx/nginx.conf.ipv4 -g "daemon off;"; \
    elif [[ -d "/proc/sys/net/ipv6" ]]; \
    then \
      nginx -c /etc/nginx/nginx.conf.ipv6 -g "daemon off;"; \
    else \
      echo "unable to identify IP configuration"; \
      exit -1; \
    fi
