FROM registry.access.redhat.com/ubi9/nginx-120

WORKDIR /opt/app-root/src

COPY hack/config /tmp/config

USER 0
RUN dnf -y install zip && \
    sed '/^\s*listen\s*\[::\]:8080/d' /etc/nginx/nginx.conf > /etc/nginx/nginx.conf.ipv4 && \
    sed '/^\s*listen\s*8080/d' /etc/nginx/nginx.conf > /etc/nginx/nginx.conf.ipv6
USER 1001

ARG download_url=https://github.com/kubevirt/kubevirt/releases/download

# TODO: remove this once we can consume a properly tagged v0.59.0
# RUN eval $(cat /tmp/config  |grep KUBEVIRT_VERSION=) && \
RUN KUBEVIRT_VERSION="v0.59.0-rc.0" && \
    echo "KUBEVIRT_VERSION: $KUBEVIRT_VERSION" && \
    curl -v --fail -L -o virtctl "${download_url}/${KUBEVIRT_VERSION}/virtctl-${KUBEVIRT_VERSION}-linux-amd64" && \
    mkdir -p ./amd64/linux && tar -zhcf ./amd64/linux/virtctl.tar.gz virtctl && rm virtctl && \
    curl -v --fail -L -o virtctl "${download_url}/${KUBEVIRT_VERSION}/virtctl-${KUBEVIRT_VERSION}-darwin-amd64" && \
    mkdir -p ./amd64/mac && zip -r -q ./amd64/mac/virtctl.zip virtctl && rm virtctl && \
    curl -v --fail -L -o virtctl.exe "${download_url}/${KUBEVIRT_VERSION}/virtctl-${KUBEVIRT_VERSION}-windows-amd64.exe" && \
    mkdir -p ./amd64/windows && zip -r -q ./amd64/windows/virtctl.zip virtctl.exe && rm virtctl.exe


ARG git_url=https://github.com/kubevirt/hyperconverged-cluster-operator.git
ARG git_sha=NONE

LABEL multi.GIT_URL=${git_url} \
      multi.GIT_SHA=${git_sha}

CMD if [[ -d "/proc/sys/net/ipv4" && -d "/proc/sys/net/ipv6" ]]; \
    then \
      nginx -g "daemon off;"; \
    elif [[ -d "/proc/sys/net/ipv4" ]]; \
    then \
      nginx -c /etc/nginx/nginx.conf.ipv4 -g "daemon off;"; \
    elif [[ -d "/proc/sys/net/ipv6" ]]; \
    then \
      nginx -c /etc/nginx/nginx.conf.ipv6 -g "daemon off;"; \
    else \
      echo "unable to identify IP configuration"; \
      exit -1; \
    fi
